syntax = "proto3";
package zigbeealliance.distributedcomplianceledger.vendorinfo;

import "vendorinfo/vendor_info.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/zigbee-alliance/distributed-compliance-ledger/x/vendorinfo/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateVendorInfo(MsgCreateVendorInfo) returns (MsgCreateVendorInfoResponse);
  rpc UpdateVendorInfo(MsgUpdateVendorInfo) returns (MsgUpdateVendorInfoResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateVendorInfo {
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "validate:\"required\""];
  int32 vendorID = 2 [(gogoproto.moretags) = "validate:\"gte=1,lte=65535\""];

  string vendorName = 3 [(gogoproto.moretags) = "validate:\"required,max=128\""];
  string companyLegalName = 4 [(gogoproto.moretags) = "validate:\"required,max=256\""];
  string companyPreferredName = 5 [(gogoproto.moretags) = "validate:\"omitempty,max=256\""];
  string vendorLandingPageURL = 6 [(gogoproto.moretags) = "validate:\"omitempty,max=256,url\""];
}
message MsgCreateVendorInfoResponse {}

message MsgUpdateVendorInfo {
  string creator = 1 [(cosmos_proto.scalar) = "cosmos.AddressString", (gogoproto.moretags) = "validate:\"required\""];
  int32 vendorID = 2 [(gogoproto.moretags) = "validate:\"gte=1,lte=65535\""];

  string vendorName = 3 [(gogoproto.moretags) = "validate:\"omitempty,max=128\""];
  string companyLegalName = 4 [(gogoproto.moretags) = "validate:\"omitempty,max=256\""];
  string companyPreferredName = 5 [(gogoproto.moretags) = "validate:\"omitempty,max=256\""];
  string vendorLandingPageURL = 6 [(gogoproto.moretags) = "validate:\"omitempty,max=256,url\""];
}
message MsgUpdateVendorInfoResponse {}

// this line is used by starport scaffolding # proto/tx/message