swagger: '2.0'
info:
  title: Distributed Compliance Ledger - REST and gRPC Gateway docs
  version: master
  license:
    name: Apache 2.0
    url: https://github.com/zigbee-alliance/distributed-compliance-ledger/blob/master/LICENSE
  description: |
    A REST interface for state queries.

    Tendermint RPC endpoints are available here: https://docs.tendermint.com/v0.34/rpc/.
paths:
  /dcl/compliance/certified-models:
    get:
      summary: Queries a list of CertifiedModel items.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceCertifiedModelAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              certifiedModel:
                type: array
                items:
                  type: object
                  properties:
                    vid:
                      type: integer
                      format: int32
                    pid:
                      type: integer
                      format: int32
                    softwareVersion:
                      type: integer
                      format: int64
                    certificationType:
                      type: string
                    value:
                      type: boolean
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/compliance/certified-models/{vid}/{pid}/{softwareVersion}/{certificationType}':
    get:
      summary: Queries a CertifiedModel by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceCertifiedModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              certifiedModel:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersion:
                    type: integer
                    format: int64
                  certificationType:
                    type: string
                  value:
                    type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
        - name: softwareVersion
          in: path
          required: true
          type: integer
          format: int64
        - name: certificationType
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/compliance/compliance-info:
    get:
      summary: Queries a list of ComplianceInfo items.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceComplianceInfoAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              complianceInfo:
                type: array
                items:
                  type: object
                  properties:
                    vid:
                      type: integer
                      format: int32
                    pid:
                      type: integer
                      format: int32
                    softwareVersion:
                      type: integer
                      format: int64
                    certificationType:
                      type: string
                    softwareVersionString:
                      type: string
                    cDVersionNumber:
                      type: integer
                      format: int64
                    softwareVersionCertificationStatus:
                      type: integer
                      format: int64
                    date:
                      type: string
                    reason:
                      type: string
                    owner:
                      type: string
                    history:
                      type: array
                      items:
                        type: object
                        properties:
                          softwareVersionCertificationStatus:
                            type: integer
                            format: int64
                          date:
                            type: string
                          reason:
                            type: string
                          cDVersionNumber:
                            type: integer
                            format: int64
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/compliance/compliance-info/{vid}/{pid}/{softwareVersion}/{certificationType}':
    get:
      summary: Queries a ComplianceInfo by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceComplianceInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              complianceInfo:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersion:
                    type: integer
                    format: int64
                  certificationType:
                    type: string
                  softwareVersionString:
                    type: string
                  cDVersionNumber:
                    type: integer
                    format: int64
                  softwareVersionCertificationStatus:
                    type: integer
                    format: int64
                  date:
                    type: string
                  reason:
                    type: string
                  owner:
                    type: string
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        softwareVersionCertificationStatus:
                          type: integer
                          format: int64
                        date:
                          type: string
                        reason:
                          type: string
                        cDVersionNumber:
                          type: integer
                          format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
        - name: softwareVersion
          in: path
          required: true
          type: integer
          format: int64
        - name: certificationType
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/compliance/provisional-models:
    get:
      summary: Queries a list of ProvisionalModel items.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceProvisionalModelAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              provisionalModel:
                type: array
                items:
                  type: object
                  properties:
                    vid:
                      type: integer
                      format: int32
                    pid:
                      type: integer
                      format: int32
                    softwareVersion:
                      type: integer
                      format: int64
                    certificationType:
                      type: string
                    value:
                      type: boolean
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/compliance/provisional-models/{vid}/{pid}/{softwareVersion}/{certificationType}':
    get:
      summary: Queries a ProvisionalModel by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceProvisionalModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              provisionalModel:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersion:
                    type: integer
                    format: int64
                  certificationType:
                    type: string
                  value:
                    type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
        - name: softwareVersion
          in: path
          required: true
          type: integer
          format: int64
        - name: certificationType
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/compliance/revoked-models:
    get:
      summary: Queries a list of RevokedModel items.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceRevokedModelAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              revokedModel:
                type: array
                items:
                  type: object
                  properties:
                    vid:
                      type: integer
                      format: int32
                    pid:
                      type: integer
                      format: int32
                    softwareVersion:
                      type: integer
                      format: int64
                    certificationType:
                      type: string
                    value:
                      type: boolean
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/compliance/revoked-models/{vid}/{pid}/{softwareVersion}/{certificationType}':
    get:
      summary: Queries a RevokedModel by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerComplianceRevokedModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              revokedModel:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersion:
                    type: integer
                    format: int64
                  certificationType:
                    type: string
                  value:
                    type: boolean
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
        - name: softwareVersion
          in: path
          required: true
          type: integer
          format: int64
        - name: certificationType
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/auth/accounts:
    get:
      summary: Queries a list of account items.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthAccountAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: array
                items:
                  type: object
                  properties:
                    baseAccount:
                      type: object
                      properties:
                        address:
                          type: string
                        pubKey:
                          type: object
                          properties:
                            '@type':
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                          additionalProperties: {}
                          description: >-
                            `Any` contains an arbitrary serialized protocol
                            buffer message along with a

                            URL that describes the type of the serialized
                            message.


                            Protobuf library provides support to pack/unpack Any
                            values in the form

                            of utility functions or additional generated methods
                            of the Any type.


                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := anypb.New(foo)
                                 if err != nil {
                                   ...
                                 }
                                 ...
                                 foo := &pb.Foo{}
                                 if err := any.UnmarshalTo(foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will
                            by default use

                            'type.googleapis.com/full.type.name' as the type URL
                            and the unpack

                            methods only use the fully qualified type name after
                            the last '/'

                            in the type URL, for example "foo.bar.com/x/y.z"
                            will yield type

                            name "y.z".



                            JSON

                            ====

                            The JSON representation of an `Any` value uses the
                            regular

                            representation of the deserialized, embedded
                            message, with an

                            additional field `@type` which contains the type
                            URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a
                            custom JSON

                            representation, that representation will be embedded
                            adding a field

                            `value` which holds the custom JSON in addition to
                            the `@type`

                            field. Example (for message
                            [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        accountNumber:
                          type: string
                          format: uint64
                        sequence:
                          type: string
                          format: uint64
                      description: >-
                        BaseAccount defines a base account type. It contains all
                        the necessary fields

                        for basic account functionality. Any custom account type
                        should extend this

                        type for additional functionality (e.g. vesting).
                    roles:
                      type: array
                      items:
                        type: string
                      title: >-
                        NOTE. we do not user AccountRoles casting here to
                        preserve repeated form
                              so protobuf takes care about repeated items in generated code,
                              (but that might be not the final solution)
                    vendorID:
                      type: integer
                      format: int32
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /dcl/auth/accounts/stat:
    get:
      summary: Queries a accountStat by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthAccountStat
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              AccountStat:
                type: object
                properties:
                  number:
                    type: string
                    format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  '/dcl/auth/accounts/{address}':
    get:
      summary: Queries a account by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                type: object
                properties:
                  baseAccount:
                    type: object
                    properties:
                      address:
                        type: string
                      pubKey:
                        type: object
                        properties:
                          '@type':
                            type: string
                            description: >-
                              A URL/resource name that uniquely identifies the
                              type of the serialized

                              protocol buffer message. This string must contain
                              at least

                              one "/" character. The last segment of the URL's
                              path must represent

                              the fully qualified name of the type (as in

                              `path/google.protobuf.Duration`). The name should
                              be in a canonical form

                              (e.g., leading "." is not accepted).


                              In practice, teams usually precompile into the
                              binary all types that they

                              expect it to use in the context of Any. However,
                              for URLs which use the

                              scheme `http`, `https`, or no scheme, one can
                              optionally set up a type

                              server that maps type URLs to message definitions
                              as follows:


                              * If no scheme is provided, `https` is assumed.

                              * An HTTP GET on the URL must yield a
                              [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results
                              based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently
                              available in the official

                              protobuf release, and it is not used for type URLs
                              beginning with

                              type.googleapis.com.


                              Schemes other than `http`, `https` (or the empty
                              scheme) might be

                              used with implementation specific semantics.
                        additionalProperties: {}
                        description: >-
                          `Any` contains an arbitrary serialized protocol buffer
                          message along with a

                          URL that describes the type of the serialized message.


                          Protobuf library provides support to pack/unpack Any
                          values in the form

                          of utility functions or additional generated methods
                          of the Any type.


                          Example 1: Pack and unpack a message in C++.

                              Foo foo = ...;
                              Any any;
                              any.PackFrom(foo);
                              ...
                              if (any.UnpackTo(&foo)) {
                                ...
                              }

                          Example 2: Pack and unpack a message in Java.

                              Foo foo = ...;
                              Any any = Any.pack(foo);
                              ...
                              if (any.is(Foo.class)) {
                                foo = any.unpack(Foo.class);
                              }

                           Example 3: Pack and unpack a message in Python.

                              foo = Foo(...)
                              any = Any()
                              any.Pack(foo)
                              ...
                              if any.Is(Foo.DESCRIPTOR):
                                any.Unpack(foo)
                                ...

                           Example 4: Pack and unpack a message in Go

                               foo := &pb.Foo{...}
                               any, err := anypb.New(foo)
                               if err != nil {
                                 ...
                               }
                               ...
                               foo := &pb.Foo{}
                               if err := any.UnmarshalTo(foo); err != nil {
                                 ...
                               }

                          The pack methods provided by protobuf library will by
                          default use

                          'type.googleapis.com/full.type.name' as the type URL
                          and the unpack

                          methods only use the fully qualified type name after
                          the last '/'

                          in the type URL, for example "foo.bar.com/x/y.z" will
                          yield type

                          name "y.z".



                          JSON

                          ====

                          The JSON representation of an `Any` value uses the
                          regular

                          representation of the deserialized, embedded message,
                          with an

                          additional field `@type` which contains the type URL.
                          Example:

                              package google.profile;
                              message Person {
                                string first_name = 1;
                                string last_name = 2;
                              }

                              {
                                "@type": "type.googleapis.com/google.profile.Person",
                                "firstName": <string>,
                                "lastName": <string>
                              }

                          If the embedded message type is well-known and has a
                          custom JSON

                          representation, that representation will be embedded
                          adding a field

                          `value` which holds the custom JSON in addition to the
                          `@type`

                          field. Example (for message
                          [google.protobuf.Duration][]):

                              {
                                "@type": "type.googleapis.com/google.protobuf.Duration",
                                "value": "1.212s"
                              }
                      accountNumber:
                        type: string
                        format: uint64
                      sequence:
                        type: string
                        format: uint64
                    description: >-
                      BaseAccount defines a base account type. It contains all
                      the necessary fields

                      for basic account functionality. Any custom account type
                      should extend this

                      type for additional functionality (e.g. vesting).
                  roles:
                    type: array
                    items:
                      type: string
                    title: >-
                      NOTE. we do not user AccountRoles casting here to preserve
                      repeated form
                            so protobuf takes care about repeated items in generated code,
                            (but that might be not the final solution)
                  vendorID:
                    type: integer
                    format: int32
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/auth/proposed-accounts:
    get:
      summary: Queries a list of pendingAccount items.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthPendingAccountAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pendingAccount:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: object
                      properties:
                        baseAccount:
                          type: object
                          properties:
                            address:
                              type: string
                            pubKey:
                              type: object
                              properties:
                                '@type':
                                  type: string
                                  description: >-
                                    A URL/resource name that uniquely identifies
                                    the type of the serialized

                                    protocol buffer message. This string must
                                    contain at least

                                    one "/" character. The last segment of the
                                    URL's path must represent

                                    the fully qualified name of the type (as in

                                    `path/google.protobuf.Duration`). The name
                                    should be in a canonical form

                                    (e.g., leading "." is not accepted).


                                    In practice, teams usually precompile into
                                    the binary all types that they

                                    expect it to use in the context of Any.
                                    However, for URLs which use the

                                    scheme `http`, `https`, or no scheme, one
                                    can optionally set up a type

                                    server that maps type URLs to message
                                    definitions as follows:


                                    * If no scheme is provided, `https` is
                                    assumed.

                                    * An HTTP GET on the URL must yield a
                                    [google.protobuf.Type][]
                                      value in binary format, or produce an error.
                                    * Applications are allowed to cache lookup
                                    results based on the
                                      URL, or have them precompiled into a binary to avoid any
                                      lookup. Therefore, binary compatibility needs to be preserved
                                      on changes to types. (Use versioned type names to manage
                                      breaking changes.)

                                    Note: this functionality is not currently
                                    available in the official

                                    protobuf release, and it is not used for
                                    type URLs beginning with

                                    type.googleapis.com.


                                    Schemes other than `http`, `https` (or the
                                    empty scheme) might be

                                    used with implementation specific semantics.
                              additionalProperties: {}
                              description: >-
                                `Any` contains an arbitrary serialized protocol
                                buffer message along with a

                                URL that describes the type of the serialized
                                message.


                                Protobuf library provides support to pack/unpack
                                Any values in the form

                                of utility functions or additional generated
                                methods of the Any type.


                                Example 1: Pack and unpack a message in C++.

                                    Foo foo = ...;
                                    Any any;
                                    any.PackFrom(foo);
                                    ...
                                    if (any.UnpackTo(&foo)) {
                                      ...
                                    }

                                Example 2: Pack and unpack a message in Java.

                                    Foo foo = ...;
                                    Any any = Any.pack(foo);
                                    ...
                                    if (any.is(Foo.class)) {
                                      foo = any.unpack(Foo.class);
                                    }

                                 Example 3: Pack and unpack a message in Python.

                                    foo = Foo(...)
                                    any = Any()
                                    any.Pack(foo)
                                    ...
                                    if any.Is(Foo.DESCRIPTOR):
                                      any.Unpack(foo)
                                      ...

                                 Example 4: Pack and unpack a message in Go

                                     foo := &pb.Foo{...}
                                     any, err := anypb.New(foo)
                                     if err != nil {
                                       ...
                                     }
                                     ...
                                     foo := &pb.Foo{}
                                     if err := any.UnmarshalTo(foo); err != nil {
                                       ...
                                     }

                                The pack methods provided by protobuf library
                                will by default use

                                'type.googleapis.com/full.type.name' as the type
                                URL and the unpack

                                methods only use the fully qualified type name
                                after the last '/'

                                in the type URL, for example "foo.bar.com/x/y.z"
                                will yield type

                                name "y.z".



                                JSON

                                ====

                                The JSON representation of an `Any` value uses
                                the regular

                                representation of the deserialized, embedded
                                message, with an

                                additional field `@type` which contains the type
                                URL. Example:

                                    package google.profile;
                                    message Person {
                                      string first_name = 1;
                                      string last_name = 2;
                                    }

                                    {
                                      "@type": "type.googleapis.com/google.profile.Person",
                                      "firstName": <string>,
                                      "lastName": <string>
                                    }

                                If the embedded message type is well-known and
                                has a custom JSON

                                representation, that representation will be
                                embedded adding a field

                                `value` which holds the custom JSON in addition
                                to the `@type`

                                field. Example (for message
                                [google.protobuf.Duration][]):

                                    {
                                      "@type": "type.googleapis.com/google.protobuf.Duration",
                                      "value": "1.212s"
                                    }
                            accountNumber:
                              type: string
                              format: uint64
                            sequence:
                              type: string
                              format: uint64
                          description: >-
                            BaseAccount defines a base account type. It contains
                            all the necessary fields

                            for basic account functionality. Any custom account
                            type should extend this

                            type for additional functionality (e.g. vesting).
                        roles:
                          type: array
                          items:
                            type: string
                          title: >-
                            NOTE. we do not user AccountRoles casting here to
                            preserve repeated form
                                  so protobuf takes care about repeated items in generated code,
                                  (but that might be not the final solution)
                        vendorID:
                          type: integer
                          format: int32
                    approvals:
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/auth/proposed-accounts/{address}':
    get:
      summary: Queries a pendingAccount by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthPendingAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pendingAccount:
                type: object
                properties:
                  address:
                    type: object
                    properties:
                      baseAccount:
                        type: object
                        properties:
                          address:
                            type: string
                          pubKey:
                            type: object
                            properties:
                              '@type':
                                type: string
                                description: >-
                                  A URL/resource name that uniquely identifies
                                  the type of the serialized

                                  protocol buffer message. This string must
                                  contain at least

                                  one "/" character. The last segment of the
                                  URL's path must represent

                                  the fully qualified name of the type (as in

                                  `path/google.protobuf.Duration`). The name
                                  should be in a canonical form

                                  (e.g., leading "." is not accepted).


                                  In practice, teams usually precompile into the
                                  binary all types that they

                                  expect it to use in the context of Any.
                                  However, for URLs which use the

                                  scheme `http`, `https`, or no scheme, one can
                                  optionally set up a type

                                  server that maps type URLs to message
                                  definitions as follows:


                                  * If no scheme is provided, `https` is
                                  assumed.

                                  * An HTTP GET on the URL must yield a
                                  [google.protobuf.Type][]
                                    value in binary format, or produce an error.
                                  * Applications are allowed to cache lookup
                                  results based on the
                                    URL, or have them precompiled into a binary to avoid any
                                    lookup. Therefore, binary compatibility needs to be preserved
                                    on changes to types. (Use versioned type names to manage
                                    breaking changes.)

                                  Note: this functionality is not currently
                                  available in the official

                                  protobuf release, and it is not used for type
                                  URLs beginning with

                                  type.googleapis.com.


                                  Schemes other than `http`, `https` (or the
                                  empty scheme) might be

                                  used with implementation specific semantics.
                            additionalProperties: {}
                            description: >-
                              `Any` contains an arbitrary serialized protocol
                              buffer message along with a

                              URL that describes the type of the serialized
                              message.


                              Protobuf library provides support to pack/unpack
                              Any values in the form

                              of utility functions or additional generated
                              methods of the Any type.


                              Example 1: Pack and unpack a message in C++.

                                  Foo foo = ...;
                                  Any any;
                                  any.PackFrom(foo);
                                  ...
                                  if (any.UnpackTo(&foo)) {
                                    ...
                                  }

                              Example 2: Pack and unpack a message in Java.

                                  Foo foo = ...;
                                  Any any = Any.pack(foo);
                                  ...
                                  if (any.is(Foo.class)) {
                                    foo = any.unpack(Foo.class);
                                  }

                               Example 3: Pack and unpack a message in Python.

                                  foo = Foo(...)
                                  any = Any()
                                  any.Pack(foo)
                                  ...
                                  if any.Is(Foo.DESCRIPTOR):
                                    any.Unpack(foo)
                                    ...

                               Example 4: Pack and unpack a message in Go

                                   foo := &pb.Foo{...}
                                   any, err := anypb.New(foo)
                                   if err != nil {
                                     ...
                                   }
                                   ...
                                   foo := &pb.Foo{}
                                   if err := any.UnmarshalTo(foo); err != nil {
                                     ...
                                   }

                              The pack methods provided by protobuf library will
                              by default use

                              'type.googleapis.com/full.type.name' as the type
                              URL and the unpack

                              methods only use the fully qualified type name
                              after the last '/'

                              in the type URL, for example "foo.bar.com/x/y.z"
                              will yield type

                              name "y.z".



                              JSON

                              ====

                              The JSON representation of an `Any` value uses the
                              regular

                              representation of the deserialized, embedded
                              message, with an

                              additional field `@type` which contains the type
                              URL. Example:

                                  package google.profile;
                                  message Person {
                                    string first_name = 1;
                                    string last_name = 2;
                                  }

                                  {
                                    "@type": "type.googleapis.com/google.profile.Person",
                                    "firstName": <string>,
                                    "lastName": <string>
                                  }

                              If the embedded message type is well-known and has
                              a custom JSON

                              representation, that representation will be
                              embedded adding a field

                              `value` which holds the custom JSON in addition to
                              the `@type`

                              field. Example (for message
                              [google.protobuf.Duration][]):

                                  {
                                    "@type": "type.googleapis.com/google.protobuf.Duration",
                                    "value": "1.212s"
                                  }
                          accountNumber:
                            type: string
                            format: uint64
                          sequence:
                            type: string
                            format: uint64
                        description: >-
                          BaseAccount defines a base account type. It contains
                          all the necessary fields

                          for basic account functionality. Any custom account
                          type should extend this

                          type for additional functionality (e.g. vesting).
                      roles:
                        type: array
                        items:
                          type: string
                        title: >-
                          NOTE. we do not user AccountRoles casting here to
                          preserve repeated form
                                so protobuf takes care about repeated items in generated code,
                                (but that might be not the final solution)
                      vendorID:
                        type: integer
                        format: int32
                  approvals:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/auth/proposed-revocation-accounts:
    get:
      summary: Queries a list of pendingAccountRevocation items.
      operationId: >-
        ZigbeeallianceDistributedcomplianceledgerDclauthPendingAccountRevocationAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pendingAccountRevocation:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    approvals:
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/auth/proposed-revocation-accounts/{address}':
    get:
      summary: Queries a pendingAccountRevocation by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclauthPendingAccountRevocation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pendingAccountRevocation:
                type: object
                properties:
                  address:
                    type: string
                  approvals:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /zigbee-alliance/distributedcomplianceledger/dclupgrade/proposed_upgrade:
    get:
      summary: Queries a list of ProposedUpgrade items.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclupgradeProposedUpgradeAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedUpgrade:
                type: array
                items:
                  type: object
                  properties:
                    plan:
                      type: object
                      properties:
                        name:
                          type: string
                          description: >-
                            Sets the name for the upgrade. This name will be
                            used by the upgraded

                            version of the software to apply any special
                            "on-upgrade" commands during

                            the first BeginBlock method after the upgrade is
                            applied. It is also used

                            to detect whether a software version can handle a
                            given upgrade. If no

                            upgrade handler with this name has been set in the
                            software, it will be

                            assumed that the software is out-of-date when the
                            upgrade Time or Height is

                            reached and the software will exit.
                        time:
                          type: string
                          format: date-time
                          description: >-
                            Deprecated: Time based upgrades have been
                            deprecated. Time based upgrade logic

                            has been removed from the SDK.

                            If this field is not empty, an error will be thrown.
                        height:
                          type: string
                          format: int64
                          description: |-
                            The height at which the upgrade must be performed.
                            Only used if Time is not set.
                        info:
                          type: string
                          title: >-
                            Any application specific upgrade info to be included
                            on-chain

                            such as a git commit that validators could
                            automatically upgrade to
                        upgradedClientState:
                          description: >-
                            Deprecated: UpgradedClientState field has been
                            deprecated. IBC upgrade logic has been

                            moved to the IBC module in the sub module 02-client.

                            If this field is not empty, an error will be thrown.
                          type: object
                          properties:
                            '@type':
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                          additionalProperties: {}
                      description: >-
                        Plan specifies information about a planned upgrade and
                        when it should occur.
                    creator:
                      type: string
                    approvals:
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/zigbee-alliance/distributedcomplianceledger/dclupgrade/proposed_upgrade/{name}':
    get:
      summary: Queries a ProposedUpgrade by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerDclupgradeProposedUpgrade
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedUpgrade:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      name:
                        type: string
                        description: >-
                          Sets the name for the upgrade. This name will be used
                          by the upgraded

                          version of the software to apply any special
                          "on-upgrade" commands during

                          the first BeginBlock method after the upgrade is
                          applied. It is also used

                          to detect whether a software version can handle a
                          given upgrade. If no

                          upgrade handler with this name has been set in the
                          software, it will be

                          assumed that the software is out-of-date when the
                          upgrade Time or Height is

                          reached and the software will exit.
                      time:
                        type: string
                        format: date-time
                        description: >-
                          Deprecated: Time based upgrades have been deprecated.
                          Time based upgrade logic

                          has been removed from the SDK.

                          If this field is not empty, an error will be thrown.
                      height:
                        type: string
                        format: int64
                        description: |-
                          The height at which the upgrade must be performed.
                          Only used if Time is not set.
                      info:
                        type: string
                        title: >-
                          Any application specific upgrade info to be included
                          on-chain

                          such as a git commit that validators could
                          automatically upgrade to
                      upgradedClientState:
                        description: >-
                          Deprecated: UpgradedClientState field has been
                          deprecated. IBC upgrade logic has been

                          moved to the IBC module in the sub module 02-client.

                          If this field is not empty, an error will be thrown.
                        type: object
                        properties:
                          '@type':
                            type: string
                            description: >-
                              A URL/resource name that uniquely identifies the
                              type of the serialized

                              protocol buffer message. This string must contain
                              at least

                              one "/" character. The last segment of the URL's
                              path must represent

                              the fully qualified name of the type (as in

                              `path/google.protobuf.Duration`). The name should
                              be in a canonical form

                              (e.g., leading "." is not accepted).


                              In practice, teams usually precompile into the
                              binary all types that they

                              expect it to use in the context of Any. However,
                              for URLs which use the

                              scheme `http`, `https`, or no scheme, one can
                              optionally set up a type

                              server that maps type URLs to message definitions
                              as follows:


                              * If no scheme is provided, `https` is assumed.

                              * An HTTP GET on the URL must yield a
                              [google.protobuf.Type][]
                                value in binary format, or produce an error.
                              * Applications are allowed to cache lookup results
                              based on the
                                URL, or have them precompiled into a binary to avoid any
                                lookup. Therefore, binary compatibility needs to be preserved
                                on changes to types. (Use versioned type names to manage
                                breaking changes.)

                              Note: this functionality is not currently
                              available in the official

                              protobuf release, and it is not used for type URLs
                              beginning with

                              type.googleapis.com.


                              Schemes other than `http`, `https` (or the empty
                              scheme) might be

                              used with implementation specific semantics.
                        additionalProperties: {}
                    description: >-
                      Plan specifies information about a planned upgrade and
                      when it should occur.
                  creator:
                    type: string
                  approvals:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/model/models:
    get:
      summary: Queries a list of all Model items.
      operationId: ZigbeeallianceDistributedcomplianceledgerModelModelAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              model:
                type: array
                items:
                  type: object
                  properties:
                    vid:
                      type: integer
                      format: int32
                    pid:
                      type: integer
                      format: int32
                    deviceTypeId:
                      type: integer
                      format: int32
                    productName:
                      type: string
                    productLabel:
                      type: string
                    partNumber:
                      type: string
                    commissioningCustomFlow:
                      type: integer
                      format: int32
                    commissioningCustomFlowUrl:
                      type: string
                    commissioningModeInitialStepsHint:
                      type: integer
                      format: int64
                    commissioningModeInitialStepsInstruction:
                      type: string
                    commissioningModeSecondaryStepsHint:
                      type: integer
                      format: int64
                    commissioningModeSecondaryStepsInstruction:
                      type: string
                    userManualUrl:
                      type: string
                    supportUrl:
                      type: string
                    productUrl:
                      type: string
                    lsfUrl:
                      type: string
                    lsfRevision:
                      type: integer
                      format: int32
                    creator:
                      type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/model/models/{vid}':
    get:
      summary: Queries VendorProducts by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerModelVendorProducts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vendorProducts:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        pid:
                          type: integer
                          format: int32
                        name:
                          type: string
                        partNumber:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  '/dcl/model/models/{vid}/{pid}':
    get:
      summary: Queries a Model by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerModelModel
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              model:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  deviceTypeId:
                    type: integer
                    format: int32
                  productName:
                    type: string
                  productLabel:
                    type: string
                  partNumber:
                    type: string
                  commissioningCustomFlow:
                    type: integer
                    format: int32
                  commissioningCustomFlowUrl:
                    type: string
                  commissioningModeInitialStepsHint:
                    type: integer
                    format: int64
                  commissioningModeInitialStepsInstruction:
                    type: string
                  commissioningModeSecondaryStepsHint:
                    type: integer
                    format: int64
                  commissioningModeSecondaryStepsInstruction:
                    type: string
                  userManualUrl:
                    type: string
                  supportUrl:
                    type: string
                  productUrl:
                    type: string
                  lsfUrl:
                    type: string
                  lsfRevision:
                    type: integer
                    format: int32
                  creator:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  '/dcl/model/versions/{vid}/{pid}':
    get:
      summary: Queries ModelVersions by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerModelModelVersions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              modelVersions:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersions:
                    type: array
                    items:
                      type: integer
                      format: int64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  '/dcl/model/versions/{vid}/{pid}/{softwareVersion}':
    get:
      summary: Queries a ModelVersion by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerModelModelVersion
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              modelVersion:
                type: object
                properties:
                  vid:
                    type: integer
                    format: int32
                  pid:
                    type: integer
                    format: int32
                  softwareVersion:
                    type: integer
                    format: int64
                  softwareVersionString:
                    type: string
                  cdVersionNumber:
                    type: integer
                    format: int32
                  firmwareDigests:
                    type: string
                  softwareVersionValid:
                    type: boolean
                  otaUrl:
                    type: string
                  otaFileSize:
                    type: string
                    format: uint64
                  otaChecksum:
                    type: string
                  otaChecksumType:
                    type: integer
                    format: int32
                  minApplicableSoftwareVersion:
                    type: integer
                    format: int64
                  maxApplicableSoftwareVersion:
                    type: integer
                    format: int64
                  releaseNotesUrl:
                    type: string
                  creator:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vid
          in: path
          required: true
          type: integer
          format: int32
        - name: pid
          in: path
          required: true
          type: integer
          format: int32
        - name: softwareVersion
          in: path
          required: true
          type: integer
          format: int64
      tags:
        - Query
  /dcl/pki/certificates:
    get:
      summary: Queries a list of ApprovedCertificates items.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiApprovedCertificatesAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              approvedCertificates:
                type: array
                items:
                  type: object
                  properties:
                    subject:
                      type: string
                    subjectKeyId:
                      type: string
                    certs:
                      type: array
                      items:
                        type: object
                        properties:
                          pemCert:
                            type: string
                          serialNumber:
                            type: string
                          issuer:
                            type: string
                          authorityKeyId:
                            type: string
                          rootSubject:
                            type: string
                          rootSubjectKeyId:
                            type: string
                          isRoot:
                            type: boolean
                          owner:
                            type: string
                          subject:
                            type: string
                          subjectKeyId:
                            type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/pki/certificates/{subject}':
    get:
      summary: Queries a ApprovedCertificatesBySubject by index.
      operationId: >-
        ZigbeeallianceDistributedcomplianceledgerPkiApprovedCertificatesBySubject
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              approvedCertificatesBySubject:
                type: object
                properties:
                  subject:
                    type: string
                  subjectKeyIds:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: subject
          in: path
          required: true
          type: string
      tags:
        - Query
  '/dcl/pki/certificates/{subject}/{subjectKeyId}':
    get:
      summary: Queries a ApprovedCertificates by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiApprovedCertificates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              approvedCertificates:
                type: object
                properties:
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
                  certs:
                    type: array
                    items:
                      type: object
                      properties:
                        pemCert:
                          type: string
                        serialNumber:
                          type: string
                        issuer:
                          type: string
                        authorityKeyId:
                          type: string
                        rootSubject:
                          type: string
                        rootSubjectKeyId:
                          type: string
                        isRoot:
                          type: boolean
                        owner:
                          type: string
                        subject:
                          type: string
                        subjectKeyId:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: subject
          in: path
          required: true
          type: string
        - name: subjectKeyId
          in: path
          required: true
          type: string
      tags:
        - Query
  '/dcl/pki/child-certificates/{issuer}/{authorityKeyId}':
    get:
      summary: Queries a ChildCertificates by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiChildCertificates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              childCertificates:
                type: object
                properties:
                  issuer:
                    type: string
                  authorityKeyId:
                    type: string
                  certIds:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                        subjectKeyId:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: issuer
          in: path
          required: true
          type: string
        - name: authorityKeyId
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/pki/proposed-certificates:
    get:
      summary: Queries a list of ProposedCertificate items.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiProposedCertificateAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedCertificate:
                type: array
                items:
                  type: object
                  properties:
                    subject:
                      type: string
                    subjectKeyId:
                      type: string
                    pemCert:
                      type: string
                    serialNumber:
                      type: string
                    owner:
                      type: string
                    approvals:
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/pki/proposed-certificates/{subject}/{subjectKeyId}':
    get:
      summary: Queries a ProposedCertificate by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiProposedCertificate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedCertificate:
                type: object
                properties:
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
                  pemCert:
                    type: string
                  serialNumber:
                    type: string
                  owner:
                    type: string
                  approvals:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: subject
          in: path
          required: true
          type: string
        - name: subjectKeyId
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/pki/proposed-revocation-certificates:
    get:
      summary: Queries a list of ProposedCertificateRevocation items.
      operationId: >-
        ZigbeeallianceDistributedcomplianceledgerPkiProposedCertificateRevocationAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedCertificateRevocation:
                type: array
                items:
                  type: object
                  properties:
                    subject:
                      type: string
                    subjectKeyId:
                      type: string
                    approvals:
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/pki/proposed-revocation-certificates/{subject}/{subjectKeyId}':
    get:
      summary: Queries a ProposedCertificateRevocation by index.
      operationId: >-
        ZigbeeallianceDistributedcomplianceledgerPkiProposedCertificateRevocation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposedCertificateRevocation:
                type: object
                properties:
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
                  approvals:
                    type: array
                    items:
                      type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: subject
          in: path
          required: true
          type: string
        - name: subjectKeyId
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/pki/revoked-certificates:
    get:
      summary: Queries a list of RevokedCertificates items.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiRevokedCertificatesAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              revokedCertificates:
                type: array
                items:
                  type: object
                  properties:
                    subject:
                      type: string
                    subjectKeyId:
                      type: string
                    certs:
                      type: array
                      items:
                        type: object
                        properties:
                          pemCert:
                            type: string
                          serialNumber:
                            type: string
                          issuer:
                            type: string
                          authorityKeyId:
                            type: string
                          rootSubject:
                            type: string
                          rootSubjectKeyId:
                            type: string
                          isRoot:
                            type: boolean
                          owner:
                            type: string
                          subject:
                            type: string
                          subjectKeyId:
                            type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/pki/revoked-certificates/{subject}/{subjectKeyId}':
    get:
      summary: Queries a RevokedCertificates by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiRevokedCertificates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              revokedCertificates:
                type: object
                properties:
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
                  certs:
                    type: array
                    items:
                      type: object
                      properties:
                        pemCert:
                          type: string
                        serialNumber:
                          type: string
                        issuer:
                          type: string
                        authorityKeyId:
                          type: string
                        rootSubject:
                          type: string
                        rootSubjectKeyId:
                          type: string
                        isRoot:
                          type: boolean
                        owner:
                          type: string
                        subject:
                          type: string
                        subjectKeyId:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: subject
          in: path
          required: true
          type: string
        - name: subjectKeyId
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/pki/revoked-root-certificates:
    get:
      summary: Queries a RevokedRootCertificates by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiRevokedRootCertificates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              RevokedRootCertificates:
                type: object
                properties:
                  certs:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                        subjectKeyId:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /dcl/pki/root-certificates:
    get:
      summary: Queries a ApprovedRootCertificates by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerPkiApprovedRootCertificates
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              ApprovedRootCertificates:
                type: object
                properties:
                  certs:
                    type: array
                    items:
                      type: object
                      properties:
                        subject:
                          type: string
                        subjectKeyId:
                          type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      tags:
        - Query
  /dcl/validator/last-powers:
    get:
      summary: Queries a list of lastValidatorPower items.
      operationId: ZigbeeallianceDistributedcomplianceledgerValidatorLastValidatorPowerAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              lastValidatorPower:
                type: array
                items:
                  type: object
                  properties:
                    owner:
                      type: string
                    power:
                      type: integer
                      format: int32
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/validator/last-powers/{owner}':
    get:
      summary: Queries a lastValidatorPower by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerValidatorLastValidatorPower
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              lastValidatorPower:
                type: object
                properties:
                  owner:
                    type: string
                  power:
                    type: integer
                    format: int32
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: owner
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/validator/nodes:
    get:
      summary: Queries a list of validator items.
      operationId: ZigbeeallianceDistributedcomplianceledgerValidatorValidatorAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                type: array
                items:
                  type: object
                  properties:
                    owner:
                      type: string
                      title: the account address of validator owner
                    description:
                      title: description of the validator
                      type: object
                      properties:
                        moniker:
                          type: string
                          description: a human-readable name for the validator.
                        identity:
                          type: string
                          description: optional identity signature.
                        website:
                          type: string
                          description: optional website link.
                        details:
                          type: string
                          description: optional details.
                    pubKey:
                      type: object
                      properties:
                        '@type':
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                      additionalProperties: {}
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                      title: the consensus public key of the tendermint validator
                    power:
                      type: integer
                      format: int32
                      title: validator consensus power
                    jailed:
                      type: boolean
                      title: has the validator been removed from validator set
                    jailedReason:
                      type: string
                      title: the reason of validator jailing
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/validator/nodes/{owner}':
    get:
      summary: Queries a validator by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerValidatorValidator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                type: object
                properties:
                  owner:
                    type: string
                    title: the account address of validator owner
                  description:
                    title: description of the validator
                    type: object
                    properties:
                      moniker:
                        type: string
                        description: a human-readable name for the validator.
                      identity:
                        type: string
                        description: optional identity signature.
                      website:
                        type: string
                        description: optional website link.
                      details:
                        type: string
                        description: optional details.
                  pubKey:
                    type: object
                    properties:
                      '@type':
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                    additionalProperties: {}
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                    title: the consensus public key of the tendermint validator
                  power:
                    type: integer
                    format: int32
                    title: validator consensus power
                  jailed:
                    type: boolean
                    title: has the validator been removed from validator set
                  jailedReason:
                    type: string
                    title: the reason of validator jailing
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: owner
          in: path
          required: true
          type: string
      tags:
        - Query
  /dcl/vendorinfo/vendors:
    get:
      summary: Queries a list of vendorInfo items.
      operationId: ZigbeeallianceDistributedcomplianceledgerVendorinfoVendorInfoAll
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vendorInfo:
                type: array
                items:
                  type: object
                  properties:
                    vendorID:
                      type: integer
                      format: int32
                    vendorName:
                      type: string
                    companyLegalName:
                      type: string
                    companyPrefferedName:
                      type: string
                    vendorLandingPageURL:
                      type: string
                    creator:
                      type: string
              pagination:
                type: object
                properties:
                  nextKey:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.countTotal
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/dcl/vendorinfo/vendors/{vendorID}':
    get:
      summary: Queries a vendorInfo by index.
      operationId: ZigbeeallianceDistributedcomplianceledgerVendorinfoVendorInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vendorInfo:
                type: object
                properties:
                  vendorID:
                    type: integer
                    format: int32
                  vendorName:
                    type: string
                  companyLegalName:
                    type: string
                  companyPrefferedName:
                    type: string
                  vendorLandingPageURL:
                    type: string
                  creator:
                    type: string
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    '@type':
                      type: string
                  additionalProperties: {}
      parameters:
        - name: vendorID
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
definitions:
  zigbeealliance.distributedcomplianceledger.compliance.CertifiedModel:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersion:
        type: integer
        format: int64
      certificationType:
        type: string
      value:
        type: boolean
  zigbeealliance.distributedcomplianceledger.compliance.ComplianceHistoryItem:
    type: object
    properties:
      softwareVersionCertificationStatus:
        type: integer
        format: int64
      date:
        type: string
      reason:
        type: string
      cDVersionNumber:
        type: integer
        format: int64
  zigbeealliance.distributedcomplianceledger.compliance.ComplianceInfo:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersion:
        type: integer
        format: int64
      certificationType:
        type: string
      softwareVersionString:
        type: string
      cDVersionNumber:
        type: integer
        format: int64
      softwareVersionCertificationStatus:
        type: integer
        format: int64
      date:
        type: string
      reason:
        type: string
      owner:
        type: string
      history:
        type: array
        items:
          type: object
          properties:
            softwareVersionCertificationStatus:
              type: integer
              format: int64
            date:
              type: string
            reason:
              type: string
            cDVersionNumber:
              type: integer
              format: int64
  zigbeealliance.distributedcomplianceledger.compliance.MsgCertifyModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.compliance.MsgProvisionModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.compliance.MsgRevokeModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.compliance.ProvisionalModel:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersion:
        type: integer
        format: int64
      certificationType:
        type: string
      value:
        type: boolean
  zigbeealliance.distributedcomplianceledger.compliance.QueryAllCertifiedModelResponse:
    type: object
    properties:
      certifiedModel:
        type: array
        items:
          type: object
          properties:
            vid:
              type: integer
              format: int32
            pid:
              type: integer
              format: int32
            softwareVersion:
              type: integer
              format: int64
            certificationType:
              type: string
            value:
              type: boolean
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.compliance.QueryAllComplianceInfoResponse:
    type: object
    properties:
      complianceInfo:
        type: array
        items:
          type: object
          properties:
            vid:
              type: integer
              format: int32
            pid:
              type: integer
              format: int32
            softwareVersion:
              type: integer
              format: int64
            certificationType:
              type: string
            softwareVersionString:
              type: string
            cDVersionNumber:
              type: integer
              format: int64
            softwareVersionCertificationStatus:
              type: integer
              format: int64
            date:
              type: string
            reason:
              type: string
            owner:
              type: string
            history:
              type: array
              items:
                type: object
                properties:
                  softwareVersionCertificationStatus:
                    type: integer
                    format: int64
                  date:
                    type: string
                  reason:
                    type: string
                  cDVersionNumber:
                    type: integer
                    format: int64
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.compliance.QueryAllProvisionalModelResponse:
    type: object
    properties:
      provisionalModel:
        type: array
        items:
          type: object
          properties:
            vid:
              type: integer
              format: int32
            pid:
              type: integer
              format: int32
            softwareVersion:
              type: integer
              format: int64
            certificationType:
              type: string
            value:
              type: boolean
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.compliance.QueryAllRevokedModelResponse:
    type: object
    properties:
      revokedModel:
        type: array
        items:
          type: object
          properties:
            vid:
              type: integer
              format: int32
            pid:
              type: integer
              format: int32
            softwareVersion:
              type: integer
              format: int64
            certificationType:
              type: string
            value:
              type: boolean
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.compliance.QueryGetCertifiedModelResponse:
    type: object
    properties:
      certifiedModel:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersion:
            type: integer
            format: int64
          certificationType:
            type: string
          value:
            type: boolean
  zigbeealliance.distributedcomplianceledger.compliance.QueryGetComplianceInfoResponse:
    type: object
    properties:
      complianceInfo:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersion:
            type: integer
            format: int64
          certificationType:
            type: string
          softwareVersionString:
            type: string
          cDVersionNumber:
            type: integer
            format: int64
          softwareVersionCertificationStatus:
            type: integer
            format: int64
          date:
            type: string
          reason:
            type: string
          owner:
            type: string
          history:
            type: array
            items:
              type: object
              properties:
                softwareVersionCertificationStatus:
                  type: integer
                  format: int64
                date:
                  type: string
                reason:
                  type: string
                cDVersionNumber:
                  type: integer
                  format: int64
  zigbeealliance.distributedcomplianceledger.compliance.QueryGetProvisionalModelResponse:
    type: object
    properties:
      provisionalModel:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersion:
            type: integer
            format: int64
          certificationType:
            type: string
          value:
            type: boolean
  zigbeealliance.distributedcomplianceledger.compliance.QueryGetRevokedModelResponse:
    type: object
    properties:
      revokedModel:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersion:
            type: integer
            format: int64
          certificationType:
            type: string
          value:
            type: boolean
  zigbeealliance.distributedcomplianceledger.compliance.RevokedModel:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersion:
        type: integer
        format: int64
      certificationType:
        type: string
      value:
        type: boolean
  cosmos.auth.v1beta1.BaseAccount:
    type: object
    properties:
      address:
        type: string
      pubKey:
        type: object
        properties:
          '@type':
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
        additionalProperties: {}
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      accountNumber:
        type: string
        format: uint64
      sequence:
        type: string
        format: uint64
    description: >-
      BaseAccount defines a base account type. It contains all the necessary
      fields

      for basic account functionality. Any custom account type should extend
      this

      type for additional functionality (e.g. vesting).
  zigbeealliance.distributedcomplianceledger.dclauth.Account:
    type: object
    properties:
      baseAccount:
        type: object
        properties:
          address:
            type: string
          pubKey:
            type: object
            properties:
              '@type':
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
            additionalProperties: {}
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          accountNumber:
            type: string
            format: uint64
          sequence:
            type: string
            format: uint64
        description: >-
          BaseAccount defines a base account type. It contains all the necessary
          fields

          for basic account functionality. Any custom account type should extend
          this

          type for additional functionality (e.g. vesting).
      roles:
        type: array
        items:
          type: string
        title: >-
          NOTE. we do not user AccountRoles casting here to preserve repeated
          form
                so protobuf takes care about repeated items in generated code,
                (but that might be not the final solution)
      vendorID:
        type: integer
        format: int32
  zigbeealliance.distributedcomplianceledger.dclauth.AccountStat:
    type: object
    properties:
      number:
        type: string
        format: uint64
  zigbeealliance.distributedcomplianceledger.dclauth.MsgApproveAddAccountResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclauth.MsgApproveRevokeAccountResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclauth.MsgProposeAddAccountResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclauth.MsgProposeRevokeAccountResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclauth.PendingAccount:
    type: object
    properties:
      address:
        type: object
        properties:
          baseAccount:
            type: object
            properties:
              address:
                type: string
              pubKey:
                type: object
                properties:
                  '@type':
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                additionalProperties: {}
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              accountNumber:
                type: string
                format: uint64
              sequence:
                type: string
                format: uint64
            description: >-
              BaseAccount defines a base account type. It contains all the
              necessary fields

              for basic account functionality. Any custom account type should
              extend this

              type for additional functionality (e.g. vesting).
          roles:
            type: array
            items:
              type: string
            title: >-
              NOTE. we do not user AccountRoles casting here to preserve
              repeated form
                    so protobuf takes care about repeated items in generated code,
                    (but that might be not the final solution)
          vendorID:
            type: integer
            format: int32
      approvals:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.dclauth.PendingAccountRevocation:
    type: object
    properties:
      address:
        type: string
      approvals:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.dclauth.QueryAllAccountResponse:
    type: object
    properties:
      account:
        type: array
        items:
          type: object
          properties:
            baseAccount:
              type: object
              properties:
                address:
                  type: string
                pubKey:
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := anypb.New(foo)
                         if err != nil {
                           ...
                         }
                         ...
                         foo := &pb.Foo{}
                         if err := any.UnmarshalTo(foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                accountNumber:
                  type: string
                  format: uint64
                sequence:
                  type: string
                  format: uint64
              description: >-
                BaseAccount defines a base account type. It contains all the
                necessary fields

                for basic account functionality. Any custom account type should
                extend this

                type for additional functionality (e.g. vesting).
            roles:
              type: array
              items:
                type: string
              title: >-
                NOTE. we do not user AccountRoles casting here to preserve
                repeated form
                      so protobuf takes care about repeated items in generated code,
                      (but that might be not the final solution)
            vendorID:
              type: integer
              format: int32
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.dclauth.QueryAllPendingAccountResponse:
    type: object
    properties:
      pendingAccount:
        type: array
        items:
          type: object
          properties:
            address:
              type: object
              properties:
                baseAccount:
                  type: object
                  properties:
                    address:
                      type: string
                    pubKey:
                      type: object
                      properties:
                        '@type':
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                      additionalProperties: {}
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := anypb.New(foo)
                             if err != nil {
                               ...
                             }
                             ...
                             foo := &pb.Foo{}
                             if err := any.UnmarshalTo(foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/x/y.z" will
                        yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    accountNumber:
                      type: string
                      format: uint64
                    sequence:
                      type: string
                      format: uint64
                  description: >-
                    BaseAccount defines a base account type. It contains all the
                    necessary fields

                    for basic account functionality. Any custom account type
                    should extend this

                    type for additional functionality (e.g. vesting).
                roles:
                  type: array
                  items:
                    type: string
                  title: >-
                    NOTE. we do not user AccountRoles casting here to preserve
                    repeated form
                          so protobuf takes care about repeated items in generated code,
                          (but that might be not the final solution)
                vendorID:
                  type: integer
                  format: int32
            approvals:
              type: array
              items:
                type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.dclauth.QueryAllPendingAccountRevocationResponse:
    type: object
    properties:
      pendingAccountRevocation:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            approvals:
              type: array
              items:
                type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.dclauth.QueryGetAccountResponse:
    type: object
    properties:
      account:
        type: object
        properties:
          baseAccount:
            type: object
            properties:
              address:
                type: string
              pubKey:
                type: object
                properties:
                  '@type':
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                additionalProperties: {}
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := anypb.New(foo)
                       if err != nil {
                         ...
                       }
                       ...
                       foo := &pb.Foo{}
                       if err := any.UnmarshalTo(foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
              accountNumber:
                type: string
                format: uint64
              sequence:
                type: string
                format: uint64
            description: >-
              BaseAccount defines a base account type. It contains all the
              necessary fields

              for basic account functionality. Any custom account type should
              extend this

              type for additional functionality (e.g. vesting).
          roles:
            type: array
            items:
              type: string
            title: >-
              NOTE. we do not user AccountRoles casting here to preserve
              repeated form
                    so protobuf takes care about repeated items in generated code,
                    (but that might be not the final solution)
          vendorID:
            type: integer
            format: int32
  zigbeealliance.distributedcomplianceledger.dclauth.QueryGetAccountStatResponse:
    type: object
    properties:
      AccountStat:
        type: object
        properties:
          number:
            type: string
            format: uint64
  zigbeealliance.distributedcomplianceledger.dclauth.QueryGetPendingAccountResponse:
    type: object
    properties:
      pendingAccount:
        type: object
        properties:
          address:
            type: object
            properties:
              baseAccount:
                type: object
                properties:
                  address:
                    type: string
                  pubKey:
                    type: object
                    properties:
                      '@type':
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                    additionalProperties: {}
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := anypb.New(foo)
                           if err != nil {
                             ...
                           }
                           ...
                           foo := &pb.Foo{}
                           if err := any.UnmarshalTo(foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/x/y.z" will
                      yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  accountNumber:
                    type: string
                    format: uint64
                  sequence:
                    type: string
                    format: uint64
                description: >-
                  BaseAccount defines a base account type. It contains all the
                  necessary fields

                  for basic account functionality. Any custom account type
                  should extend this

                  type for additional functionality (e.g. vesting).
              roles:
                type: array
                items:
                  type: string
                title: >-
                  NOTE. we do not user AccountRoles casting here to preserve
                  repeated form
                        so protobuf takes care about repeated items in generated code,
                        (but that might be not the final solution)
              vendorID:
                type: integer
                format: int32
          approvals:
            type: array
            items:
              type: string
  zigbeealliance.distributedcomplianceledger.dclauth.QueryGetPendingAccountRevocationResponse:
    type: object
    properties:
      pendingAccountRevocation:
        type: object
        properties:
          address:
            type: string
          approvals:
            type: array
            items:
              type: string
  cosmos.upgrade.v1beta1.Plan:
    type: object
    properties:
      name:
        type: string
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
      time:
        type: string
        format: date-time
        description: >-
          Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.
      height:
        type: string
        format: int64
        description: |-
          The height at which the upgrade must be performed.
          Only used if Time is not set.
      info:
        type: string
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
      upgradedClientState:
        description: >-
          Deprecated: UpgradedClientState field has been deprecated. IBC upgrade
          logic has been

          moved to the IBC module in the sub module 02-client.

          If this field is not empty, an error will be thrown.
        type: object
        properties:
          '@type':
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
        additionalProperties: {}
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
  zigbeealliance.distributedcomplianceledger.dclupgrade.MsgApproveUpgradeResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclupgrade.MsgProposeUpgradeResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.dclupgrade.ProposedUpgrade:
    type: object
    properties:
      plan:
        type: object
        properties:
          name:
            type: string
            description: >-
              Sets the name for the upgrade. This name will be used by the
              upgraded

              version of the software to apply any special "on-upgrade" commands
              during

              the first BeginBlock method after the upgrade is applied. It is
              also used

              to detect whether a software version can handle a given upgrade.
              If no

              upgrade handler with this name has been set in the software, it
              will be

              assumed that the software is out-of-date when the upgrade Time or
              Height is

              reached and the software will exit.
          time:
            type: string
            format: date-time
            description: >-
              Deprecated: Time based upgrades have been deprecated. Time based
              upgrade logic

              has been removed from the SDK.

              If this field is not empty, an error will be thrown.
          height:
            type: string
            format: int64
            description: |-
              The height at which the upgrade must be performed.
              Only used if Time is not set.
          info:
            type: string
            title: >-
              Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade
              to
          upgradedClientState:
            description: >-
              Deprecated: UpgradedClientState field has been deprecated. IBC
              upgrade logic has been

              moved to the IBC module in the sub module 02-client.

              If this field is not empty, an error will be thrown.
            type: object
            properties:
              '@type':
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
            additionalProperties: {}
        description: >-
          Plan specifies information about a planned upgrade and when it should
          occur.
      creator:
        type: string
      approvals:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.dclupgrade.QueryAllProposedUpgradeResponse:
    type: object
    properties:
      proposedUpgrade:
        type: array
        items:
          type: object
          properties:
            plan:
              type: object
              properties:
                name:
                  type: string
                  description: >-
                    Sets the name for the upgrade. This name will be used by the
                    upgraded

                    version of the software to apply any special "on-upgrade"
                    commands during

                    the first BeginBlock method after the upgrade is applied. It
                    is also used

                    to detect whether a software version can handle a given
                    upgrade. If no

                    upgrade handler with this name has been set in the software,
                    it will be

                    assumed that the software is out-of-date when the upgrade
                    Time or Height is

                    reached and the software will exit.
                time:
                  type: string
                  format: date-time
                  description: >-
                    Deprecated: Time based upgrades have been deprecated. Time
                    based upgrade logic

                    has been removed from the SDK.

                    If this field is not empty, an error will be thrown.
                height:
                  type: string
                  format: int64
                  description: |-
                    The height at which the upgrade must be performed.
                    Only used if Time is not set.
                info:
                  type: string
                  title: >-
                    Any application specific upgrade info to be included
                    on-chain

                    such as a git commit that validators could automatically
                    upgrade to
                upgradedClientState:
                  description: >-
                    Deprecated: UpgradedClientState field has been deprecated.
                    IBC upgrade logic has been

                    moved to the IBC module in the sub module 02-client.

                    If this field is not empty, an error will be thrown.
                  type: object
                  properties:
                    '@type':
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                  additionalProperties: {}
              description: >-
                Plan specifies information about a planned upgrade and when it
                should occur.
            creator:
              type: string
            approvals:
              type: array
              items:
                type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.dclupgrade.QueryGetProposedUpgradeResponse:
    type: object
    properties:
      proposedUpgrade:
        type: object
        properties:
          plan:
            type: object
            properties:
              name:
                type: string
                description: >-
                  Sets the name for the upgrade. This name will be used by the
                  upgraded

                  version of the software to apply any special "on-upgrade"
                  commands during

                  the first BeginBlock method after the upgrade is applied. It
                  is also used

                  to detect whether a software version can handle a given
                  upgrade. If no

                  upgrade handler with this name has been set in the software,
                  it will be

                  assumed that the software is out-of-date when the upgrade Time
                  or Height is

                  reached and the software will exit.
              time:
                type: string
                format: date-time
                description: >-
                  Deprecated: Time based upgrades have been deprecated. Time
                  based upgrade logic

                  has been removed from the SDK.

                  If this field is not empty, an error will be thrown.
              height:
                type: string
                format: int64
                description: |-
                  The height at which the upgrade must be performed.
                  Only used if Time is not set.
              info:
                type: string
                title: >-
                  Any application specific upgrade info to be included on-chain

                  such as a git commit that validators could automatically
                  upgrade to
              upgradedClientState:
                description: >-
                  Deprecated: UpgradedClientState field has been deprecated. IBC
                  upgrade logic has been

                  moved to the IBC module in the sub module 02-client.

                  If this field is not empty, an error will be thrown.
                type: object
                properties:
                  '@type':
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                additionalProperties: {}
            description: >-
              Plan specifies information about a planned upgrade and when it
              should occur.
          creator:
            type: string
          approvals:
            type: array
            items:
              type: string
  zigbeealliance.distributedcomplianceledger.model.Model:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      deviceTypeId:
        type: integer
        format: int32
      productName:
        type: string
      productLabel:
        type: string
      partNumber:
        type: string
      commissioningCustomFlow:
        type: integer
        format: int32
      commissioningCustomFlowUrl:
        type: string
      commissioningModeInitialStepsHint:
        type: integer
        format: int64
      commissioningModeInitialStepsInstruction:
        type: string
      commissioningModeSecondaryStepsHint:
        type: integer
        format: int64
      commissioningModeSecondaryStepsInstruction:
        type: string
      userManualUrl:
        type: string
      supportUrl:
        type: string
      productUrl:
        type: string
      lsfUrl:
        type: string
      lsfRevision:
        type: integer
        format: int32
      creator:
        type: string
  zigbeealliance.distributedcomplianceledger.model.ModelVersion:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersion:
        type: integer
        format: int64
      softwareVersionString:
        type: string
      cdVersionNumber:
        type: integer
        format: int32
      firmwareDigests:
        type: string
      softwareVersionValid:
        type: boolean
      otaUrl:
        type: string
      otaFileSize:
        type: string
        format: uint64
      otaChecksum:
        type: string
      otaChecksumType:
        type: integer
        format: int32
      minApplicableSoftwareVersion:
        type: integer
        format: int64
      maxApplicableSoftwareVersion:
        type: integer
        format: int64
      releaseNotesUrl:
        type: string
      creator:
        type: string
  zigbeealliance.distributedcomplianceledger.model.ModelVersions:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      softwareVersions:
        type: array
        items:
          type: integer
          format: int64
  zigbeealliance.distributedcomplianceledger.model.MsgCreateModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.model.MsgCreateModelVersionResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.model.MsgDeleteModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.model.MsgUpdateModelResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.model.MsgUpdateModelVersionResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.model.Product:
    type: object
    properties:
      pid:
        type: integer
        format: int32
      name:
        type: string
      partNumber:
        type: string
  zigbeealliance.distributedcomplianceledger.model.QueryAllModelResponse:
    type: object
    properties:
      model:
        type: array
        items:
          type: object
          properties:
            vid:
              type: integer
              format: int32
            pid:
              type: integer
              format: int32
            deviceTypeId:
              type: integer
              format: int32
            productName:
              type: string
            productLabel:
              type: string
            partNumber:
              type: string
            commissioningCustomFlow:
              type: integer
              format: int32
            commissioningCustomFlowUrl:
              type: string
            commissioningModeInitialStepsHint:
              type: integer
              format: int64
            commissioningModeInitialStepsInstruction:
              type: string
            commissioningModeSecondaryStepsHint:
              type: integer
              format: int64
            commissioningModeSecondaryStepsInstruction:
              type: string
            userManualUrl:
              type: string
            supportUrl:
              type: string
            productUrl:
              type: string
            lsfUrl:
              type: string
            lsfRevision:
              type: integer
              format: int32
            creator:
              type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.model.QueryGetModelResponse:
    type: object
    properties:
      model:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          deviceTypeId:
            type: integer
            format: int32
          productName:
            type: string
          productLabel:
            type: string
          partNumber:
            type: string
          commissioningCustomFlow:
            type: integer
            format: int32
          commissioningCustomFlowUrl:
            type: string
          commissioningModeInitialStepsHint:
            type: integer
            format: int64
          commissioningModeInitialStepsInstruction:
            type: string
          commissioningModeSecondaryStepsHint:
            type: integer
            format: int64
          commissioningModeSecondaryStepsInstruction:
            type: string
          userManualUrl:
            type: string
          supportUrl:
            type: string
          productUrl:
            type: string
          lsfUrl:
            type: string
          lsfRevision:
            type: integer
            format: int32
          creator:
            type: string
  zigbeealliance.distributedcomplianceledger.model.QueryGetModelVersionResponse:
    type: object
    properties:
      modelVersion:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersion:
            type: integer
            format: int64
          softwareVersionString:
            type: string
          cdVersionNumber:
            type: integer
            format: int32
          firmwareDigests:
            type: string
          softwareVersionValid:
            type: boolean
          otaUrl:
            type: string
          otaFileSize:
            type: string
            format: uint64
          otaChecksum:
            type: string
          otaChecksumType:
            type: integer
            format: int32
          minApplicableSoftwareVersion:
            type: integer
            format: int64
          maxApplicableSoftwareVersion:
            type: integer
            format: int64
          releaseNotesUrl:
            type: string
          creator:
            type: string
  zigbeealliance.distributedcomplianceledger.model.QueryGetModelVersionsResponse:
    type: object
    properties:
      modelVersions:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          pid:
            type: integer
            format: int32
          softwareVersions:
            type: array
            items:
              type: integer
              format: int64
  zigbeealliance.distributedcomplianceledger.model.QueryGetVendorProductsResponse:
    type: object
    properties:
      vendorProducts:
        type: object
        properties:
          vid:
            type: integer
            format: int32
          products:
            type: array
            items:
              type: object
              properties:
                pid:
                  type: integer
                  format: int32
                name:
                  type: string
                partNumber:
                  type: string
  zigbeealliance.distributedcomplianceledger.model.VendorProducts:
    type: object
    properties:
      vid:
        type: integer
        format: int32
      products:
        type: array
        items:
          type: object
          properties:
            pid:
              type: integer
              format: int32
            name:
              type: string
            partNumber:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.ApprovedCertificates:
    type: object
    properties:
      subject:
        type: string
      subjectKeyId:
        type: string
      certs:
        type: array
        items:
          type: object
          properties:
            pemCert:
              type: string
            serialNumber:
              type: string
            issuer:
              type: string
            authorityKeyId:
              type: string
            rootSubject:
              type: string
            rootSubjectKeyId:
              type: string
            isRoot:
              type: boolean
            owner:
              type: string
            subject:
              type: string
            subjectKeyId:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.ApprovedCertificatesBySubject:
    type: object
    properties:
      subject:
        type: string
      subjectKeyIds:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.pki.ApprovedRootCertificates:
    type: object
    properties:
      certs:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.Certificate:
    type: object
    properties:
      pemCert:
        type: string
      serialNumber:
        type: string
      issuer:
        type: string
      authorityKeyId:
        type: string
      rootSubject:
        type: string
      rootSubjectKeyId:
        type: string
      isRoot:
        type: boolean
      owner:
        type: string
      subject:
        type: string
      subjectKeyId:
        type: string
  zigbeealliance.distributedcomplianceledger.pki.CertificateIdentifier:
    type: object
    properties:
      subject:
        type: string
      subjectKeyId:
        type: string
  zigbeealliance.distributedcomplianceledger.pki.ChildCertificates:
    type: object
    properties:
      issuer:
        type: string
      authorityKeyId:
        type: string
      certIds:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.MsgAddX509CertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.MsgApproveAddX509RootCertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.MsgApproveRevokeX509RootCertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.MsgProposeAddX509RootCertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.MsgProposeRevokeX509RootCertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.MsgRevokeX509CertResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.pki.ProposedCertificate:
    type: object
    properties:
      subject:
        type: string
      subjectKeyId:
        type: string
      pemCert:
        type: string
      serialNumber:
        type: string
      owner:
        type: string
      approvals:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.pki.ProposedCertificateRevocation:
    type: object
    properties:
      subject:
        type: string
      subjectKeyId:
        type: string
      approvals:
        type: array
        items:
          type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryAllApprovedCertificatesResponse:
    type: object
    properties:
      approvedCertificates:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
            certs:
              type: array
              items:
                type: object
                properties:
                  pemCert:
                    type: string
                  serialNumber:
                    type: string
                  issuer:
                    type: string
                  authorityKeyId:
                    type: string
                  rootSubject:
                    type: string
                  rootSubjectKeyId:
                    type: string
                  isRoot:
                    type: boolean
                  owner:
                    type: string
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.pki.QueryAllProposedCertificateResponse:
    type: object
    properties:
      proposedCertificate:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
            pemCert:
              type: string
            serialNumber:
              type: string
            owner:
              type: string
            approvals:
              type: array
              items:
                type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.pki.QueryAllProposedCertificateRevocationResponse:
    type: object
    properties:
      proposedCertificateRevocation:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
            approvals:
              type: array
              items:
                type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.pki.QueryAllRevokedCertificatesResponse:
    type: object
    properties:
      revokedCertificates:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
            certs:
              type: array
              items:
                type: object
                properties:
                  pemCert:
                    type: string
                  serialNumber:
                    type: string
                  issuer:
                    type: string
                  authorityKeyId:
                    type: string
                  rootSubject:
                    type: string
                  rootSubjectKeyId:
                    type: string
                  isRoot:
                    type: boolean
                  owner:
                    type: string
                  subject:
                    type: string
                  subjectKeyId:
                    type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.pki.QueryGetApprovedCertificatesBySubjectResponse:
    type: object
    properties:
      approvedCertificatesBySubject:
        type: object
        properties:
          subject:
            type: string
          subjectKeyIds:
            type: array
            items:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetApprovedCertificatesResponse:
    type: object
    properties:
      approvedCertificates:
        type: object
        properties:
          subject:
            type: string
          subjectKeyId:
            type: string
          certs:
            type: array
            items:
              type: object
              properties:
                pemCert:
                  type: string
                serialNumber:
                  type: string
                issuer:
                  type: string
                authorityKeyId:
                  type: string
                rootSubject:
                  type: string
                rootSubjectKeyId:
                  type: string
                isRoot:
                  type: boolean
                owner:
                  type: string
                subject:
                  type: string
                subjectKeyId:
                  type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetApprovedRootCertificatesResponse:
    type: object
    properties:
      ApprovedRootCertificates:
        type: object
        properties:
          certs:
            type: array
            items:
              type: object
              properties:
                subject:
                  type: string
                subjectKeyId:
                  type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetChildCertificatesResponse:
    type: object
    properties:
      childCertificates:
        type: object
        properties:
          issuer:
            type: string
          authorityKeyId:
            type: string
          certIds:
            type: array
            items:
              type: object
              properties:
                subject:
                  type: string
                subjectKeyId:
                  type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetProposedCertificateResponse:
    type: object
    properties:
      proposedCertificate:
        type: object
        properties:
          subject:
            type: string
          subjectKeyId:
            type: string
          pemCert:
            type: string
          serialNumber:
            type: string
          owner:
            type: string
          approvals:
            type: array
            items:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetProposedCertificateRevocationResponse:
    type: object
    properties:
      proposedCertificateRevocation:
        type: object
        properties:
          subject:
            type: string
          subjectKeyId:
            type: string
          approvals:
            type: array
            items:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetRevokedCertificatesResponse:
    type: object
    properties:
      revokedCertificates:
        type: object
        properties:
          subject:
            type: string
          subjectKeyId:
            type: string
          certs:
            type: array
            items:
              type: object
              properties:
                pemCert:
                  type: string
                serialNumber:
                  type: string
                issuer:
                  type: string
                authorityKeyId:
                  type: string
                rootSubject:
                  type: string
                rootSubjectKeyId:
                  type: string
                isRoot:
                  type: boolean
                owner:
                  type: string
                subject:
                  type: string
                subjectKeyId:
                  type: string
  zigbeealliance.distributedcomplianceledger.pki.QueryGetRevokedRootCertificatesResponse:
    type: object
    properties:
      RevokedRootCertificates:
        type: object
        properties:
          certs:
            type: array
            items:
              type: object
              properties:
                subject:
                  type: string
                subjectKeyId:
                  type: string
  zigbeealliance.distributedcomplianceledger.pki.RevokedCertificates:
    type: object
    properties:
      subject:
        type: string
      subjectKeyId:
        type: string
      certs:
        type: array
        items:
          type: object
          properties:
            pemCert:
              type: string
            serialNumber:
              type: string
            issuer:
              type: string
            authorityKeyId:
              type: string
            rootSubject:
              type: string
            rootSubjectKeyId:
              type: string
            isRoot:
              type: boolean
            owner:
              type: string
            subject:
              type: string
            subjectKeyId:
              type: string
  zigbeealliance.distributedcomplianceledger.pki.RevokedRootCertificates:
    type: object
    properties:
      certs:
        type: array
        items:
          type: object
          properties:
            subject:
              type: string
            subjectKeyId:
              type: string
  zigbeealliance.distributedcomplianceledger.validator.Description:
    type: object
    properties:
      moniker:
        type: string
        description: a human-readable name for the validator.
      identity:
        type: string
        description: optional identity signature.
      website:
        type: string
        description: optional website link.
      details:
        type: string
        description: optional details.
  zigbeealliance.distributedcomplianceledger.validator.LastValidatorPower:
    type: object
    properties:
      owner:
        type: string
      power:
        type: integer
        format: int32
  zigbeealliance.distributedcomplianceledger.validator.MsgCreateValidatorResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.validator.QueryAllLastValidatorPowerResponse:
    type: object
    properties:
      lastValidatorPower:
        type: array
        items:
          type: object
          properties:
            owner:
              type: string
            power:
              type: integer
              format: int32
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.validator.QueryAllValidatorResponse:
    type: object
    properties:
      validator:
        type: array
        items:
          type: object
          properties:
            owner:
              type: string
              title: the account address of validator owner
            description:
              title: description of the validator
              type: object
              properties:
                moniker:
                  type: string
                  description: a human-readable name for the validator.
                identity:
                  type: string
                  description: optional identity signature.
                website:
                  type: string
                  description: optional website link.
                details:
                  type: string
                  description: optional details.
            pubKey:
              type: object
              properties:
                '@type':
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
              additionalProperties: {}
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/x/y.z" will yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
              title: the consensus public key of the tendermint validator
            power:
              type: integer
              format: int32
              title: validator consensus power
            jailed:
              type: boolean
              title: has the validator been removed from validator set
            jailedReason:
              type: string
              title: the reason of validator jailing
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.validator.QueryGetLastValidatorPowerResponse:
    type: object
    properties:
      lastValidatorPower:
        type: object
        properties:
          owner:
            type: string
          power:
            type: integer
            format: int32
  zigbeealliance.distributedcomplianceledger.validator.QueryGetValidatorResponse:
    type: object
    properties:
      validator:
        type: object
        properties:
          owner:
            type: string
            title: the account address of validator owner
          description:
            title: description of the validator
            type: object
            properties:
              moniker:
                type: string
                description: a human-readable name for the validator.
              identity:
                type: string
                description: optional identity signature.
              website:
                type: string
                description: optional website link.
              details:
                type: string
                description: optional details.
          pubKey:
            type: object
            properties:
              '@type':
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
            additionalProperties: {}
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/x/y.z" will yield type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
            title: the consensus public key of the tendermint validator
          power:
            type: integer
            format: int32
            title: validator consensus power
          jailed:
            type: boolean
            title: has the validator been removed from validator set
          jailedReason:
            type: string
            title: the reason of validator jailing
  zigbeealliance.distributedcomplianceledger.validator.Validator:
    type: object
    properties:
      owner:
        type: string
        title: the account address of validator owner
      description:
        title: description of the validator
        type: object
        properties:
          moniker:
            type: string
            description: a human-readable name for the validator.
          identity:
            type: string
            description: optional identity signature.
          website:
            type: string
            description: optional website link.
          details:
            type: string
            description: optional details.
      pubKey:
        type: object
        properties:
          '@type':
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
        additionalProperties: {}
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := anypb.New(foo)
               if err != nil {
                 ...
               }
               ...
               foo := &pb.Foo{}
               if err := any.UnmarshalTo(foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
        title: the consensus public key of the tendermint validator
      power:
        type: integer
        format: int32
        title: validator consensus power
      jailed:
        type: boolean
        title: has the validator been removed from validator set
      jailedReason:
        type: string
        title: the reason of validator jailing
  zigbeealliance.distributedcomplianceledger.vendorinfo.MsgCreateVendorInfoResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.vendorinfo.MsgUpdateVendorInfoResponse:
    type: object
  zigbeealliance.distributedcomplianceledger.vendorinfo.QueryAllVendorInfoResponse:
    type: object
    properties:
      vendorInfo:
        type: array
        items:
          type: object
          properties:
            vendorID:
              type: integer
              format: int32
            vendorName:
              type: string
            companyLegalName:
              type: string
            companyPrefferedName:
              type: string
            vendorLandingPageURL:
              type: string
            creator:
              type: string
      pagination:
        type: object
        properties:
          nextKey:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  zigbeealliance.distributedcomplianceledger.vendorinfo.QueryGetVendorInfoResponse:
    type: object
    properties:
      vendorInfo:
        type: object
        properties:
          vendorID:
            type: integer
            format: int32
          vendorName:
            type: string
          companyLegalName:
            type: string
          companyPrefferedName:
            type: string
          vendorLandingPageURL:
            type: string
          creator:
            type: string
  zigbeealliance.distributedcomplianceledger.vendorinfo.VendorInfo:
    type: object
    properties:
      vendorID:
        type: integer
        format: int32
      vendorName:
        type: string
      companyLegalName:
        type: string
      companyPrefferedName:
        type: string
      vendorLandingPageURL:
        type: string
      creator:
        type: string
