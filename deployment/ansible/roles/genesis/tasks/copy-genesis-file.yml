---
# Copyright 2022 DSR Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: copy genesis file | read genesis file content
  become: true
  changed_when: false
  command: "cat {{ dcl_home }}/config/genesis.json"
  register: genesis_file_content
  run_once: true

- name: copy genesis file | copy genesis file to local file
  become: false
  copy:
    content: "{{ genesis_file_content.stdout }}"
    dest: "{{ playbook_dir }}/../persistent_chains/{{ chain_id }}/genesis.json"
  run_once: true
  delegate_to: localhost
# - name: Check if local genesis exists
#   stat:
#     path: "{{ playbook_dir }}/../persistent_chains/{{ chain_id }}/genesis.json"
#   register: local_genesis_file
#   delegate_to: localhost
#   run_once: true

# - name: Copy genesis from local to remote (if exists locally)
#   copy:
#     src: "{{ playbook_dir }}/../persistent_chains/{{ chain_id }}/genesis.json"
#     dest: "{{ dcl_home }}/config/genesis.json"
#     owner: "{{ ansible_user | default('root') }}"
#     mode: '0644'
#   when: local_genesis_file.stat.exists
#   run_once: true

# - name: Read genesis from remote (if no local copy)
#   command: "cat {{ dcl_home }}/config/genesis.json"
#   register: genesis_file_content
#   changed_when: false
#   when: not local_genesis_file.stat.exists
#   run_once: true

# - name: Save remote genesis to local (if no local copy)
#   copy:
#     content: "{{ genesis_file_content.stdout }}"
#     dest: "{{ playbook_dir }}/../persistent_chains/{{ chain_id }}/genesis.json"
#   when: not local_genesis_file.stat.exists
#   delegate_to: localhost
#   run_once: true
