---
# Copyright 2022 Samsung Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: setup-service | get service status
  service_facts:

- name: setup-service | enable service ports
  block:
    - name: open p2p port
      community.general.ufw:
        to_port: '26656'
        proto: tcp
        rule: allow

    - name: open RPC port
      community.general.ufw:
        to_port: '26657'
        proto: tcp
        rule: allow
  when:
    - ansible_facts.services["ufw.service"] is defined

- name: setup-service | recreate cosmovisor service
  become: true
  block:
    - name: create destination directory for cosmovisor config
      file:
        state: directory
        recurse: true
        path: /etc/systemd/system.conf.d/
    - name: copy cosmovisor config
      template:
        mode: preserve
        src: cosmovisor.conf.j2
        dest: /etc/systemd/system.conf.d/cosmovisor.conf
    - name: copy service file
      template:
        mode: preserve
        src: cosmovisor.service.j2
        dest: /etc/systemd/system/cosmovisor.service

- name: create destination directories
  file:
    state: directory
    recurse: true
    path: "{{ item }}"
  loop:
    - "{{ dcld.path | dirname }}"
    - "{{ cosmovisor.path | dirname }}"
    - "{{ cosmovisor.log_path | dirname }}"

- name: create cosmovisor log file
  become: true
  copy:
    dest: "{{ cosmovisor.log_path }}"
    content: ""

- name: setup-service | download binary
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
    mode: '0755'
    force: false
  become: true
  loop:
    - {url: "{{ dcld_download_url }}", dest: "{{ dcld.path }}", checksum: "{{ dcld_binary_checksum }}"}
    - {url: "{{ cosmovisor_download_url }}", dest: "{{ cosmovisor.path }}", checksum: "{{ cosmovisor_binary_checksum }}"}

- name: copy script files to home directory
  become: true
  block:
    - name: copy start script
      copy:
        src: "../../../../../cosmovisor_start.sh"
        dest: "{{ dcl_home }}/cosmovisor/cosmovisor_start.sh"
        owner: "{{ cosmovisor.user }}"
        mode: 0755
    - name: copy preupgrade script
      copy:
        src: "../../../../../cosmovisor_preupgrade.sh"
        dest: "{{ dcl_home }}/cosmovisor/cosmovisor_preupgrade.sh"
        owner: "{{ cosmovisor.user }}"
        mode: 0755

- name: create a symbolic link to dcld binary
  ansible.builtin.file:
    src: "{{ dcld.path }}"
    dest: /usr/local/bin/dcld
    owner: "{{ cosmovisor.user }}"
    group: "{{ cosmovisor.group }}"
    state: link
